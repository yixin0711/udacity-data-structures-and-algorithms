The TrieNode class contains an initializer, an insert function and a suffixes function. In the worst case, the insert function will traverse all the children in a TrieNode so the time complexity is O(n). The suffixes() function also traverse all the children so it will tame O(n) times. Same cases to the Trie class which contains insert() function and find() function.  Both of them traverse all the children of a TrieNode so the time complexity of this autocomplete Trie class will be in general O(n). For a single TrieNode class, the space complexity would be O(n) since it needs a dict for every char of a word. As for a Trie class, the space complexity would be O(m*n) where m is the number of words n is the number of character in each word. 